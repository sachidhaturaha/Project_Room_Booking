{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachi\\\\Desktop\\\\Room_Booking_2\\\\react-frontend\\\\src\\\\screens\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Room from '../components/Room';\nimport moment from 'moment';\nimport { DatePicker } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nfunction Homescreen() {\n  _s();\n  const [rooms, setrooms] = useState([]);\n  const [loading, setloading] = useState();\n  const [error, seterror] = useState();\n  const [fromdate, setfromdate] = useState();\n  const [todate, settodate] = useState();\n  const [duplicaterooms, setduplicaterooms] = useState([]);\n  useEffect(() => {\n    // Define an async function inside the useEffect\n    const fetchData = async () => {\n      try {\n        setloading(true);\n        const response = await axios.get('http://localhost:5000/api/rooms/getallrooms');\n        setrooms(response.data);\n        setduplicaterooms(response.data);\n        setloading(false);\n      } catch (error) {\n        seterror(true);\n        console.log(error);\n        setloading(false);\n      }\n    };\n\n    // Call the async function\n    fetchData();\n  }, []); // Dependency array is empty, meaning this effect runs once after the initial render\n\n  function filterByDate(dates) {\n    // Check if dates is null or undefined\n    if (!dates || dates.length === 0) {\n      // Handle the case when no dates are selected (e.g., reset to showing all rooms)\n      setfromdate(undefined);\n      settodate(undefined);\n      setrooms(duplicaterooms); // Assuming duplicaterooms holds the original full list of rooms\n      return; // Exit the function early\n    }\n    setfromdate(dates[0].format('DD-MM-YYYY'));\n    settodate(dates[1].format('DD-MM-YYYY'));\n    var temprooms = [];\n    var availability = false;\n    for (const room of duplicaterooms) {\n      if (room.currentbookings.length > 0) {\n        availability = room.currentbookings.every(booking => {\n          const bookingFromDate = moment(booking.fromdate, 'DD-MM-YYYY');\n          const bookingToDate = moment(booking.todate, 'DD-MM-YYYY');\n          const selectedFromDate = moment(dates[0].format('DD-MM-YYYY'), 'DD-MM-YYYY');\n          const selectedToDate = moment(dates[1].format('DD-MM-YYYY'), 'DD-MM-YYYY');\n          return !(selectedFromDate.isBetween(bookingFromDate, bookingToDate, undefined, '[]') || selectedToDate.isBetween(bookingFromDate, bookingToDate, undefined, '[]') || bookingFromDate.isSame(selectedFromDate) || bookingFromDate.isSame(selectedToDate) || bookingToDate.isSame(selectedFromDate) || bookingToDate.isSame(selectedToDate));\n        });\n      }\n      if (availability || room.currentbookings.length === 0) {\n        temprooms.push(room);\n      }\n      availability = false; // Reset availability for the next room\n    }\n    setrooms(temprooms); // Update the rooms displayed based on availability\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(RangePicker, {\n          format: \"DD-MM-YYYY\",\n          onChange: filterByDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 61\n      }, this) : rooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-9 mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Room, {\n            room: room,\n            fromdate: fromdate,\n            todate: todate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Homescreen, \"zDvwt1JRUma/ViPWJYwWAUv4GxY=\");\n_c = Homescreen;\nexport default Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Room","moment","DatePicker","jsxDEV","_jsxDEV","RangePicker","Homescreen","_s","rooms","setrooms","loading","setloading","error","seterror","fromdate","setfromdate","todate","settodate","duplicaterooms","setduplicaterooms","fetchData","response","get","data","console","log","filterByDate","dates","length","undefined","format","temprooms","availability","room","currentbookings","every","booking","bookingFromDate","bookingToDate","selectedFromDate","selectedToDate","isBetween","isSame","push","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/Sachi/Desktop/Room_Booking_2/react-frontend/src/screens/Homescreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Room from '../components/Room';\r\nimport moment from 'moment';\r\n\r\nimport { DatePicker } from 'antd';\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction Homescreen() {\r\n\r\n    const [rooms, setrooms] = useState([])\r\n    const [loading, setloading] = useState()\r\n    const [error, seterror] = useState()\r\n    const [fromdate, setfromdate] = useState()\r\n    const [todate, settodate] = useState()\r\n    const [duplicaterooms, setduplicaterooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        // Define an async function inside the useEffect\r\n        const fetchData = async () => {\r\n            try {\r\n\r\n                setloading(true)\r\n                const response = await axios.get('http://localhost:5000/api/rooms/getallrooms');\r\n\r\n                setrooms(response.data)\r\n                setduplicaterooms(response.data)\r\n\r\n                setloading(false)\r\n\r\n            } catch (error) {\r\n                seterror(true)\r\n                console.log(error);\r\n                setloading(false)\r\n            }\r\n        };\r\n\r\n        // Call the async function\r\n        fetchData();\r\n    }, []); // Dependency array is empty, meaning this effect runs once after the initial render\r\n\r\n\r\n    function filterByDate(dates) {\r\n        // Check if dates is null or undefined\r\n        if (!dates || dates.length === 0) {\r\n            // Handle the case when no dates are selected (e.g., reset to showing all rooms)\r\n            setfromdate(undefined);\r\n            settodate(undefined);\r\n            setrooms(duplicaterooms); // Assuming duplicaterooms holds the original full list of rooms\r\n            return; // Exit the function early\r\n        }\r\n    \r\n        setfromdate(dates[0].format('DD-MM-YYYY'));\r\n        settodate(dates[1].format('DD-MM-YYYY'));\r\n    \r\n        var temprooms = [];\r\n        var availability = false;\r\n        for (const room of duplicaterooms) {\r\n            if (room.currentbookings.length > 0) {\r\n                availability = room.currentbookings.every(booking => {\r\n                    const bookingFromDate = moment(booking.fromdate, 'DD-MM-YYYY');\r\n                    const bookingToDate = moment(booking.todate, 'DD-MM-YYYY');\r\n                    const selectedFromDate = moment(dates[0].format('DD-MM-YYYY'), 'DD-MM-YYYY');\r\n                    const selectedToDate = moment(dates[1].format('DD-MM-YYYY'), 'DD-MM-YYYY');\r\n    \r\n                    return !(selectedFromDate.isBetween(bookingFromDate, bookingToDate, undefined, '[]') ||\r\n                             selectedToDate.isBetween(bookingFromDate, bookingToDate, undefined, '[]') ||\r\n                             bookingFromDate.isSame(selectedFromDate) || bookingFromDate.isSame(selectedToDate) ||\r\n                             bookingToDate.isSame(selectedFromDate) || bookingToDate.isSame(selectedToDate));\r\n                });\r\n            }\r\n    \r\n            if (availability || room.currentbookings.length === 0) {\r\n                temprooms.push(room);\r\n            }\r\n            availability = false; // Reset availability for the next room\r\n        }\r\n    \r\n        setrooms(temprooms); // Update the rooms displayed based on availability\r\n    }\r\n    \r\n    return (\r\n        <div className='container'>\r\n\r\n            <div className='row mt-5'>\r\n                <div className='col-md-3'>\r\n                    <RangePicker format='DD-MM-YYYY' onChange={filterByDate} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row justify-content-center mt-5\">\r\n                {loading ? (<h1>Loading...</h1>) : error ? (<h1>Error</h1>) : (rooms.map(room => {\r\n                    return <div className=\"col-md-9 mt-2\">\r\n                        <Room room={room} fromdate={fromdate} todate={todate} />\r\n                    </div>\r\n                }))}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Homescreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}